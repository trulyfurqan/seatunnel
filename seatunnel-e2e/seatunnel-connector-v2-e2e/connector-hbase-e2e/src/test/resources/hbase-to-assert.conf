#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

env {
  parallelism = 1
  job.mode = "BATCH"
}

source {
  Hbase {
      zookeeper_quorum = "hbase_e2e:2181"
      table = "test_table"
      query_columns=["rowkey", "cf1:col1", "cf1:col2", "cf2:col1", "cf2:col2", "cf2:col_date", "cf2:col_timestamp", "cf2:col_time"]
      schema = {
            columns = [
                  {
                     name = rowkey
                     type = string
                  },
                  {
                     name = "cf2:col1"
                     type = bigint
                  },
                  {
                     name = "cf2:col2"
                     type = int
                  },
                  {
                     name = "cf1:col1"
                     type = boolean
                  },
                  {
                     name = "cf1:col2"
                     type = double
                  },
                  {
                     name = "cf2:col_date"
                     type = date
                  },
                  {
                     name = "cf2:col_timestamp"
                     type = timestamp
                  },
                  {
                     name = "cf2:col_time"
                     type = time
                  }
             ]
       }
    }
}


sink {
  Assert {
    rules {
      row_rules = [
        {
          rule_type = MAX_ROW
          rule_value = 2
        },
        {
          rule_type = MIN_ROW
          rule_value = 2
        }
      ],
      field_rules = [
        {
          field_name = rowkey
          field_type = string
          field_value = [
            {
              rule_type = NOT_NULL
            }
          ]
        },
        {
          field_name = "cf1:col1"
          field_type = boolean
          field_value = [
            {
              rule_type = NOT_NULL
            }
          ]
        },
        {
          field_name = "cf1:col2"
          field_type = double
          field_value = [
            {
              rule_type = NOT_NULL
            }
          ]
        },
        {
          field_name = "cf2:col1"
          field_type = bigint
          field_value = [
            {
              rule_type = NOT_NULL
            }
          ]
        },
        {
          field_name = "cf2:col2"
          field_type = int
          field_value = [
            {
              rule_type = NOT_NULL
            }
          ]
        },
        {
           field_name = "cf2:col_date"
           field_type = date
           field_value = [
             {
               rule_type = NOT_NULL
             }
           ]
        }
      ]
    }
  }
}